#!/bin/bash

# configuration variables
refresh_rate=0.1               # how often will the bar update
datefmt="%d %b %I:%M:%S"         # date time format
maildir=/home/ethan/mail/INBOX/new/  # where do new mails arrive ?
alsactl=Master                  # which alsa channel to display
#battery=BAT0                    # battery index
# find battery name in a smart way
battery=$(ls /sys/class/power_supply | grep BAT1)

barch=''
#barch=''
barfg='%{F#ff888888}'
barmg='%{F#ffffffff}'
barbg='%{F#00888888}'


clock() {
    date "+${datefmt}"
}

mails() {
    fcount ${maildir}
}

muted() {
    amixer get $alsactl | grep -o '\[off\]' >/dev/null && false || true
}

volume() {
    amixer get $alsactl | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p' | uniq
}

batteryCapacity() {
    BATC=/sys/class/power_supply/${battery}/capacity
    cat $BATC
}

batteryStatus() {
    BATS=/sys/class/power_supply/${battery}/status
    BATC=/sys/class/power_supply/${battery}/capacity

    if [[ "$(cat $BATC)" -lt 10 ]]; then
        echo "${barmg} "
    elif [[ "$(cat $BATC)" -lt 50 ]]; then
        echo "${barmg} "
    elif [[ "$(cat $BATS)" == "Discharging" ]]; then 
        echo "${barmg} "
    elif [[ "$(cat $BATS)" == "Unknown" ]]; then
        echo "${barmg} "
    fi
}

cpuload() {
    LINE=`ps -eo pcpu |grep -vE '^\s*(0.0|%CPU)' |sed -n '1h;$!H;$g;s/\n/ +/gp'`
    echo `bc <<< $LINE`
}

memused() {
    read t f <<< `grep -E 'Mem(Total|Free)' /proc/meminfo |awk '{print $2}'`
    read b c <<< `grep -E '^(Buffers|Cached)' /proc/meminfo |awk '{print $2}'`
    bc <<< "100 * ($t - $f - $c - $b) / $t"
}

netstate() {
    test -n "`ip route`" && echo "connected" || echo "disconnected"
}

netip() {
    case $1 in
        local)
            # local ip
            ip addr show "enp2s0" | grep 'inet ' | awk '{print $2}'
            ;;
        *)
            # extern ip 
            cat "$HOME/var/externalip"
            ;;
    esac
}

getdevice(){
	:
}


nowplaying() {
    cur="$(mpc current)"
    if test -n "$(mpc current)"; then
        echo "$cur"
    else
        echo "- stopped -"
    fi
}

muted() {
    amixer get $alsactl | grep -o '\[off\]' >/dev/null && false || true
}

volume() {
    amixer get $alsactl | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p' | uniq
}

volumeStatus() {

    if [[ "$(volume)" -lt 1 ]]; then
        echo "${barmg} "
    elif [[ "$(volume)" -lt 25 ]]; then
        echo "${barmg} "
    elif [[ "$(volume)" -lt 50 ]]; then
        echo "${barmg} "
    else 
        echo "${barmg} "
    fi
}
isUp() {
   if (wget -O /dev/null -q "$1"); then 
        echo "$2 %{F#ff00b300}"
    else 
        echo "$2 %{F#ffb30000}"
    fi
}
makebar() {
    max=10
    cur=$(($1 / 10))
    
    if [[ "$(batteryCapacity)" -lt 15 ]] && test -n "${battery}"; then    
        barColor="%{F#ffFF0000}"
    else
        barColor="$barmg"
    fi

    bar="$barColor"

    for v in $(seq 0 $((max - 1))); do
        if [ "$v" -lt "$cur" ]; then
            bar="${bar}${barColor}${barch}"
        else
            bar="${bar}${barfg}${barch}"
        fi
    done

    echo "${bar}${barfg}"
}
while :; do
    buf="${buf}%{l}"
    buf="${buf}${barmg}   ${barfg}$(netip local)"
    buf="${buf}${barmg} ${barfg}$(netip)    "
 
    buf="${buf}%{r}"
    buf="${buf}${barmg} ${barfg}$(nowplaying)${barmg}| "
    buf="${buf}${barmg}${barfg} $(checkupdates | wc -l)"
    buf="${buf}${barmg}  ${barfg} $(volume) "
    buf="${buf}${barmg}${barfg} $(mails)"

    # Show battery status if there is a battery
    test -n "${battery}" &&
        buf="${buf} $(batteryStatus)${barfg} $(makebar   $(batteryCapacity)) "
    #if not battery it instead display volume as a bar
    test -n "${battery}" || 
         buf="${buf} $(volumeStatus)${barfg} $(makebar   $(volume)) "

    buf="${buf}${barmg} ${barfg} $(clock)  "
    echo $buf
    buf=""
    sleep ${refresh_rate}
done
