//Ethan Larkham
//Lab 3-26
//Problem2
#include <iostream>
#include <ctime>
#include <cstdlib>
using namespace std;

void quickSort (int [], int, int);
void screenOutput (const int []);
void fillArray (int []);

int main(){
	int list[500];
	fillArray(list);
	quickSort(list,1,list[0]);
	screenOutput(list);
}
void fillArray (int temp[])
{
        temp[0]=500;
        for (int loop=1; loop<=temp[0]; loop++)
                temp[loop] = rand() % 500 + 1;
}


void screenOutput (const int temp[])
{
        cout << endl << endl;
        for (int loop=1; loop<=temp[0]; loop++)
        {
                cout.width(6);      
                cout << temp[loop];
                if (loop % 12 == 0)
                        cout << endl;
        }
        cout << endl;
}

void quickSort (int list[], int first, int last)
{
        int g = first, h = last;
        int midIndex, dividingValue;
        midIndex = (first+last)/2;
        dividingValue = list[midIndex];
        do
        {
                while(list[g] > dividingValue)
                {
                        g++;
                }
                while(list[h] < dividingValue)
                {
                        h--;
                }
                if (g <= h)
                {
                        swap(list[g], list[h]);
                        g++;
                        h--;
                }
        }while(g < h);
        if(h > first)
                quickSort(list, first, h);
        if(g < last)
                quickSort(list, g, last);
}
/*
   500   499   498   498   497   497   497   497   495   494   493   493
   492   491   491   489   489   488   485   482   482   481   476   475
   474   473   472   471   469   468   467   466   466   465   465   462
   461   461   460   459   457   457   455   453   452   450   446   445
   445   445   444   442   441   441   440   438   437   437   437   435
   435   434   433   433   431   430   430   430   429   429   429   428
   427   427   427   426   425   423   423   422   422   422   422   421
   420   419   418   418   417   416   415   415   414   413   409   408
   405   405   405   404   404   403   403   401   400   400   400   399
   397   396   396   395   394   393   391   391   388   387   387   386
   385   384   382   380   380   380   379   379   377   374   374   373
   373   372   371   370   369   369   369   369   369   368   368   366
   366   365   364   363   363   363   361   360   359   358   357   357
   356   354   351   351   351   349   349   347   347   344   344   343
   343   342   341   341   341   341   341   340   337   337   337   336
   336   334   330   330   329   328   327   327   325   325   322   321
   320   320   319   319   318   316   315   314   314   312   312   311
   309   309   307   306   306   305   305   304   304   303   302   302
   302   300   300   299   298   297   296   296   295   294   294   293
   293   290   289   289   287   287   286   285   285   283   283   282
   281   278   277   277   277   276   274   274   273   272   271   270
   270   265   265   264   264   260   259   257   257   256   256   255
   255   255   254   254   251   250   249   249   247   247   246   244
   244   244   240   239   238   237   237   236   233   233   233   231
   230   230   230   230   229   229   229   228   227   226   225   224
   223   222   220   216   216   214   214   212   211   210   210   209
   209   207   206   206   203   203   200   200   199   198   198   194
   193   191   191   191   190   190   189   189   187   185   184   184
   183   182   180   179   178   177   176   173   173   173   171   170
   169   168   168   164   162   161   160   160   159   158   156   153
   153   152   152   151   150   150   149   148   145   145   144   143
   141   140   138   136   135   134   132   131   130   129   128   128
   127   126   126   125   125   125   125   124   123   122   122   120
   119   118   114   114   112   108   107   106   102   101   100    98
    98    96    95    92    91    91    91    88    88    87    87    85
    85    85    85    83    83    82    82    80    72    71    70    70
    69    68    68    68    68    68    63    61    60    59    57    56
    52    51    51    50    47    46    44    44    43    43    43    43
    42    41    40    40    39    39    38    37    37    36    35    34
    32    31    30    30    30    29    29    29    28    28    27    25
    23    23    22    20    13    12    12    10     8     7     6     6
     5     5     5     4     3     1     1     1
*/
